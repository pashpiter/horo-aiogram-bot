import random

from aiogram import F, Router, html
from aiogram.filters import Command, CommandStart
from aiogram.types import Message

from config.bot import bot
from keyboards.horo import sign_kb
from texts.horo_text import ALL_HOROSCOPES
from texts.signs_info import SIGNS, SIGNS_LIST
from utils.horo import edit_kb_msg_answer_add_db, make_real_horo
from handlers.db_handlers import (horo_sign_from_db, insert_new_user,
                                  insert_or_update_kb_msg_id,
                                  insert_or_update_zodiak_msg_id,
                                  select_last_kb_msg_id,
                                  select_last_zodiak_msg_id,
                                  select_used_horo_for_user, update_zodiak)

router = Router()


@router.message(Command('help'))
async def command_help(message: Message) -> None:
    '''–ö–æ–º–∞–Ω–¥–∞ help —Å–æ —Å–ø–∏—Å–∫–æ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞'''
    await message.answer(
        '–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n'
        '/update –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –≥–æ—Ä–æ—Å–∫–æ–ø–∞\n'
        '/change_zodiac –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞\n'
        '/clear_history –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π'
        '/real_horoscope –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è'
    )


@router.message(F.text.lower().split()[0].in_(SIGNS_LIST))
async def sign_info_answer(message: Message) -> None:
    '''–§—É–Ω—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∑–Ω–∞–∫—É –∑–æ–¥–∏–∞–∫–∞'''
    sign_in_db = await horo_sign_from_db(message.from_user.id)
    sign = sign_in_db[0].get('horo_sign')
    zodiak_msg = await message.answer(
            SIGNS[message.text.lower().split()[0]]
        )
    await insert_or_update_zodiak_msg_id(
        message.from_user.id, zodiak_msg.message_id
    )
    if not sign or sign != message.text.lower().split()[0]:
        await update_zodiak(
            message.from_user.id, message.text.lower().split()[0]
        )
    await send_horo(message)


@router.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    '''–ö–æ–º–∞–Ω–¥–∞ start –¥–æ–±–∞–ª—è–µ—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –∏–ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç
    –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã'''
    await insert_new_user(
        message.from_user.id,
        message.from_user.username
    )
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {html.bold(message.from_user.full_name)}!')
    zodiak_db = await horo_sign_from_db(message.from_user.id)
    zodiak: str = zodiak_db[0].get('horo_sign')
    if zodiak:
        await message.answer(
            f'–¢—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ –∑–Ω–∞–∫–æ–º –∑–æ–¥–∏–∞–∫–∞ {zodiak.capitalize()}'
        )
        await message.answer(
            '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n'
            '/update –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –≥–æ—Ä–æ—Å–∫–æ–ø–∞\n'
            '/change_zodiac –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞\n'
            '/clear_history –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π'
            '/real_horoscope –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è'
        )
    else:
        await change_zodiak(message)


@router.message(Command('update'))
async def update_horo(message: Message) -> None:
    '''–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è (–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è) –≥–æ—Ä–æ—Å–∫–æ–ø–∞'''
    await send_horo(message)


@router.message(Command('change_zodiac'))
async def change_zodiak(message: Message) -> None:
    '''–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞'''
    await message.answer('–í—ã–±–µ—Ä–∏ —Å–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ üëá',
                         reply_markup=sign_kb())


@router.message(Command('clear_history'))
async def clear_history(message: Message) -> None:
    '''–£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 48 —á–∞—Å–æ–≤'''
    ids_db = await select_last_zodiak_msg_id(
        message.from_user.id
    )
    last_zodiak_msg_id = ids_db[0].get('last_zodiak_msg_id')
    try:
        for msg_id in [
            n for n in range(
                message.message_id, 1, -1
            ) if n != last_zodiak_msg_id
        ]:
            await bot.delete_message(
                chat_id=message.chat.id, message_id=msg_id
            )
    except Exception as e:
        print(f'–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è {e}')
    finally:
        await insert_or_update_kb_msg_id(
                message.from_user.id, None
            )


async def send_horo(message: Message) -> None:
    '''–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –≥–æ—Ä–æ—Å–∫–æ–ø–∞'''
    used_horo_db = await select_used_horo_for_user(message.chat.id)
    used_horo = [x['horo_id'] for x in used_horo_db] if used_horo_db else None
    kb_msg_id_db = await select_last_kb_msg_id(message.chat.id)
    kb_msg_id = kb_msg_id_db[0].get('last_kb_msg_id')
    if not used_horo:
        n = random.randint(1, len(ALL_HOROSCOPES))
        await edit_kb_msg_answer_add_db(message, kb_msg_id, n)
    elif len(used_horo) < len(ALL_HOROSCOPES):
        n = random.choice(
            [i for i in range(1, len(ALL_HOROSCOPES)+1) if i not in used_horo]
        )
        await edit_kb_msg_answer_add_db(message, kb_msg_id, n)
    else:
        await edit_kb_msg_answer_add_db(message, kb_msg_id)


@router.message(Command('real_horoscope'))
async def real_horo(message: Message) -> None:
    '''–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≥–æ—Ä–æ—Å–∫–æ–ø–∞'''
    zodiak_db = await horo_sign_from_db(message.from_user.id)
    horo = await make_real_horo(zodiak_db[0].get('horo_sign'))
    await message.answer(horo)


@router.message()
async def any_message(message: Message) -> None:
    '''–õ—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–æ–¥ –∫–æ–º–º–∞–Ω–¥—ã –∏–ª–∏ –∑–Ω–∞–∫–∏ –∑–æ–¥–∏–∞–∫–∞'''
    await message.answer('–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω—è–ª')
